From 223bcad9c8bf38d856029822a4b1255b01549165 Mon Sep 17 00:00:00 2001
From: Carlos Alberto Lopez Perez <clopez@igalia.com>
Date: Tue, 19 Dec 2017 03:44:56 +0100
Subject: [PATCH 4/6] Revert "gldisplay: add a dedicated event thread"

This reverts commit 1a6c4be242d6d684b03bea6cba339207358faf79.
---
 gst-libs/gst/gl/gstgldisplay.c | 86 ------------------------------------------
 gst-libs/gst/gl/gstgldisplay.h |  5 ---
 2 files changed, 91 deletions(-)

diff --git a/gst-libs/gst/gl/gstgldisplay.c b/gst-libs/gst/gl/gstgldisplay.c
index 5378955ea..42e660da0 100644
--- a/gst-libs/gst/gl/gstgldisplay.c
+++ b/gst-libs/gst/gl/gstgldisplay.c
@@ -97,8 +97,6 @@ enum
 
 static guint gst_gl_display_signals[LAST_SIGNAL] = { 0 };
 
-
-static void gst_gl_display_dispose (GObject * object);
 static void gst_gl_display_finalize (GObject * object);
 static guintptr gst_gl_display_default_get_handle (GstGLDisplay * display);
 
@@ -107,49 +105,8 @@ struct _GstGLDisplayPrivate
   GstGLAPI gl_api;
 
   GList *contexts;
-
-  GThread *event_thread;
-
-  GMutex thread_lock;
-  GCond thread_cond;
 };
 
-static gboolean
-_unlock_main_thread (GstGLDisplay * display)
-{
-  g_mutex_unlock (&display->priv->thread_lock);
-
-  return G_SOURCE_REMOVE;
-}
-
-static gpointer
-_event_thread_main (GstGLDisplay * display)
-{
-  g_mutex_lock (&display->priv->thread_lock);
-
-  display->main_context = g_main_context_new ();
-  display->main_loop = g_main_loop_new (display->main_context, FALSE);
-
-  g_main_context_invoke (display->main_context,
-      (GSourceFunc) _unlock_main_thread, display);
-
-  g_cond_broadcast (&display->priv->thread_cond);
-
-  g_main_loop_run (display->main_loop);
-
-  g_mutex_lock (&display->priv->thread_lock);
-  g_main_loop_unref (display->main_loop);
-  g_main_context_unref (display->main_context);
-
-  display->main_loop = NULL;
-  display->main_context = NULL;
-
-  g_cond_broadcast (&display->priv->thread_cond);
-  g_mutex_unlock (&display->priv->thread_lock);
-
-  return NULL;
-}
-
 static void
 gst_gl_display_class_init (GstGLDisplayClass * klass)
 {
@@ -174,7 +131,6 @@ gst_gl_display_class_init (GstGLDisplayClass * klass)
   klass->get_handle = gst_gl_display_default_get_handle;
 
   G_OBJECT_CLASS (klass)->finalize = gst_gl_display_finalize;
-  G_OBJECT_CLASS (klass)->dispose = gst_gl_display_dispose;
 }
 
 static void
@@ -185,17 +141,6 @@ gst_gl_display_init (GstGLDisplay * display)
   display->type = GST_GL_DISPLAY_TYPE_ANY;
   display->priv->gl_api = GST_GL_API_ANY;
 
-  g_mutex_init (&display->priv->thread_lock);
-  g_cond_init (&display->priv->thread_cond);
-
-  display->priv->event_thread = g_thread_new ("gldisplay-event",
-      (GThreadFunc) _event_thread_main, display);
-
-  g_mutex_lock (&display->priv->thread_lock);
-  while (!display->main_loop)
-    g_cond_wait (&display->priv->thread_cond, &display->priv->thread_lock);
-  g_mutex_unlock (&display->priv->thread_lock);
-
   GST_TRACE ("init %p", display);
 
   gst_gl_buffer_init_once ();
@@ -208,34 +153,6 @@ gst_gl_display_init (GstGLDisplay * display)
 }
 
 static void
-gst_gl_display_dispose (GObject * object)
-{
-  GstGLDisplay *display = GST_GL_DISPLAY (object);
-
-  if (display->main_loop)
-    g_main_loop_quit (display->main_loop);
-
-  if (display->priv->event_thread) {
-    /* can't use g_thread_join() as we could lose the last ref from a user
-     * function */
-    g_mutex_lock (&display->priv->thread_lock);
-    while (display->main_loop)
-      g_cond_wait (&display->priv->thread_cond, &display->priv->thread_lock);
-    g_mutex_unlock (&display->priv->thread_lock);
-    g_thread_unref (display->priv->event_thread);
-  }
-  display->priv->event_thread = NULL;
-
-  if (display->event_source) {
-    g_source_destroy (display->event_source);
-    g_source_unref (display->event_source);
-  }
-  display->event_source = NULL;
-
-  G_OBJECT_CLASS (gst_gl_display_parent_class)->dispose (object);
-}
-
-static void
 gst_gl_display_finalize (GObject * object)
 {
   GstGLDisplay *display = GST_GL_DISPLAY (object);
@@ -251,9 +168,6 @@ gst_gl_display_finalize (GObject * object)
   g_list_free (display->windows);
   g_list_free (display->priv->contexts);
 
-  g_cond_clear (&display->priv->thread_cond);
-  g_mutex_clear (&display->priv->thread_lock);
-
   G_OBJECT_CLASS (gst_gl_display_parent_class)->finalize (object);
 }
 
diff --git a/gst-libs/gst/gl/gstgldisplay.h b/gst-libs/gst/gl/gstgldisplay.h
index f5d42052c..6818e99d6 100644
--- a/gst-libs/gst/gl/gstgldisplay.h
+++ b/gst-libs/gst/gl/gstgldisplay.h
@@ -79,11 +79,6 @@ struct _GstGLDisplay
 
   GstGLDisplayType      type;
 
-  /* <protected> */
-  GMainContext             *main_context;
-  GMainLoop                *main_loop;
-  GSource                  *event_source;
-
   GstGLDisplayPrivate  *priv;
 };
 
-- 
2.11.0

